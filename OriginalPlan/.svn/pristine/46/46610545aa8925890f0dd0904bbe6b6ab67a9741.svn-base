#include "script_engine_common.h"
#include "game_pos.h"
#include "base_packet_def.h"
#include "script_library_header.h"
#include "game_config.h"

bool ShareLibraryBindClass(CScriptEngineCommon::TScriptState* pState)
{
// 	lua_tinker::class_add<CGameConfig>(pState, "CGameConfig");
// 	// 世界服务器参数
// 	lua_tinker::class_mem<CGameConfig>(pState, "loginPlayerNum", &CGameConfig::loginPlayerNum);							// 一次性登陆的玩家个数
// 	lua_tinker::class_mem<CGameConfig>(pState, "loginPlayerInterval", &CGameConfig::loginPlayerInterval);				// 处理loginplayer的时间间隔
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxWServerStatTime", &CGameConfig::maxWServerStatTime);					// 世界服务器统计时间
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxWorldRoleHeartOutTime", &CGameConfig::maxWorldRoleHeartOutTime);		// 世界服务器角色心跳超时时间
// 	// 地图服务器参数
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxMapPlayerDataLenght", &CGameConfig::maxMapPlayerDataLenght);			// 地图连接数据最大缓存长度
// 	lua_tinker::class_mem<CGameConfig>(pState, "monsterDieLeaveSceneTime", &CGameConfig::monsterDieLeaveSceneTime);		// 怪物死亡后离开场景时间
// 	lua_tinker::class_mem<CGameConfig>(pState, "blockSize", &CGameConfig::blockSize);									// 块大小
// 	lua_tinker::class_mem<CGameConfig>(pState, "broadcastRange", &CGameConfig::broadcastRange);							// 广播时搜索范围
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxLoginReadyTimes", &CGameConfig::maxLoginReadyTimes);					// 角色登陆的最大等待时间
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxLogoutTimes", &CGameConfig::maxLogoutTimes);							// 角色登出的最大等待时间
// 	lua_tinker::class_mem<CGameConfig>(pState, "maxSceneRoleNum", &CGameConfig::maxSceneRoleNum);						// 场景最大的角色数目

	return true;
}

