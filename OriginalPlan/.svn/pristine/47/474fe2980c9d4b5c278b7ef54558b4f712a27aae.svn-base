以下情况在必须是在全局的定义, 如果在类的内部则gx,T,E头可以不用加
1. 所有全局函数以gx+大写开头
2. 所有的 typedef 必须以T开头, 形如TXXX, 例如 typedef double TGameTime;
3. 所有 enum 必须以E开头, 形如EXXX, 例如 enum EGameDefine{}, 且枚举值必须全部大写单词+'_';
4. 所有的define 必须以D开头, 形如: DXXX, 例如: #define DDefine
5. 所有常量必须用全大写单词+'_'隔开, 开始XXX_XXX_XXX, 例如: const sint32 AAA_BBB_CCC = 1000
6. 成员函数必须以小写字母开头的单词, 类的成员函数必须全部以大写字母开头的单词
7. 文件以小写单词+'_'隔开

========================bug=========================
1. 规划时间系统,统一时间值为uint64,单位为毫秒
2. 把所有循环的时间值改成统一定义的时间值
3. CIni太难用了, 全部改成string
4. @todo time_buff
5. 处理new和delete
6. 重点测试内存池,多线程同步,日志
7. dump生成
8. multi_index
9. c_time,包装时间, 将所有的time调用转换成c_
10. _POSIX_TIMERS
12. 检查凡是类型不一致的地方
13. 获取windows堆栈
14. 重点测试功能 所有日志必须输出
15. 性能测试
16. 检测类中成员是否全部赋值
17. 检查父类析构函数是否被调用了
18. 日志效率
19. 看基类构造函数是否被调用了
20. socket指定时间断开
21. 数据库锁的问题
22. 在Service中添加onBeforeStart(), onAfterStart()之类的回调函数
23. 注意游戏的退出流程
24. 角色的ID及宠物的ID是在第一次登陆的时候分配的, 后面切换场景及切换线ID都不能改变
25. 完善日志系统, 让其可以输出重载了基本操作符的对象_toBase
26. 加上该加的日志, @log
27. 使用回调参数对象绑定方式
28. 仔细处理当无法将对像从哈希表中删除的错误, 多加断言
29. 尽量少用无符号数
30. 注意坐标计算超出范围
31. 把所有的统计代码做成定时器

========================tag=========================

========================编译环境============================
1.编译环境: win: vs2008及以上编译器 linux: gcc4.0及以上编译器
2.


=========================cygwin===========================
1. debug.h中dump
2. @todo FIONREAD
3. 处理容器erase差异
4. 确保TTime_t和time_t长度是一致的


========================运行环境============================
1.windows xp/win7
2.centos 6.0


==========================页游注意事项========================
1.玩家会不停的刷新游戏
2.要等待客户端先加载完资源才能发角色数据和广播信息



===========================优化==============================
1. 日志采用快速记录库, 且无格式

