import platform
import shutil 

if (platform.system() == "Windows") :
	Library('x64/gamebaselib',
		Glob('src/*.cpp'),
		CPPPATH=[
				'src/.',
				'../../lib/internal/include/',
				'../../lib/internal/include/core/',
				'../../../third/include/',
				'../../../third/include/zlib/',
				'../../../third/include/cryptocpp/',
				'../../../third/include/tinyxpath/',
				'../../../third/include/libevent/',
				'../../../third/include/libevent/event2',
				'../../../third/include/WIN32-Code/',
				'../../../third/include/coredumper/',
				'../../../third/include/mysql/win/',
				'../../../third/include/mysqlpp/',
				'../../../third/include/fastformat/',
				'../../../third/include/stlsoft-1.10-alpha-15-delta/include/',
				'../../../third/include/lua/',
				'../sharelib/src'
			],
		CCFLAGS=[
				'-D_DEBUG',
				'-D_WIN64',
				'-DOS_WIN',
				'-DNOMINMAX',
				'-DOS_BIT=64',
				'-DUSE_FAST_FORMAT',
				# '-DWIN32',
				'-DOS_WIN',
				'-DUSE_RTTI',
				'-DCURL_STATICLIB',
				'-D_SCL_SECURE_NO_WARNINGS',
				'/wd"4819"',
				'/EHsc',
				'/Fa"x64\Debug\"',
				'/MDd'
			],
		LIBPATH=[
				'../../../third/lib',
				'../../../third/lib/mysql/lib64',
				'../../lib/internal/lib'
			],
		LINKFLAGS=[
				'/NODEFAULTLIB:"libcmtd.lib"',
				'/NODEFAULTLIB:"LIBCMT.lib"',
				'/NODEFAULTLIB:"libcpmtd.lib"',
				'/TLBID:1',
				'/DYNAMICBASE',
				'/NXCOMPAT',
				'/MACHINE:X64',
				'/ERRORREPORT:QUEUE'
			],
		LIBS=[
				'kernel32.lib',
				'user32.lib',
				'gdi32.lib',
				'winspool.lib',
				'comdlg32.lib',
				'advapi32.lib',
				'shell32.lib',
				'ole32.lib',
				'oleaut32.lib',
				'uuid.lib',
				'odbc32.lib',
				'odbccp32.lib',
				'libcurl_debug_64.lib',
				'libevent_debug_64.lib',
				'mysqlpp_debug_64.lib',
				'cryptlib_debug_64.lib',
				'zlibstatic_debug_64.lib',
				'tinyxpath_lib_debug_64.lib',
				'lualib_debug_64.lib',
				'luabind_debug_64.lib',
				'core_Debug_64.lib',
				'fastformat.0.core.vc9.dll.debug.64.lib',
				'sharelib_Debug_64.lib',
			]
	)

	shutil.copy("x64/gamebaselib.lib",  "../../lib/internal/lib/gamebaselib_debug_64.lib")

elif (platform.system() == "Linux") :
	CPPPATH1=[
				'src/.',
				'../../lib/internal/include/',
				'../../lib/internal/include/core/',
				'../../../third/include/',
				'../../../third/include/zlib/',
				'../../../third/include/cryptocpp/',
				'../../../third/include/tinyxpath/',
				'../../../third/include/libevent/',
				'../../../third/include/libevent/event2',
				'../../../third/include/WIN32-Code/',
				'../../../third/include/coredumper/',
				'../../../third/include/mysql/linux/',
				'../../../third/include/mysqlpp/',
				'../../../third/include/fastformat/',
				'../../../third/include/stlsoft-1.10-alpha-15-delta/include/',
				'../../../third/include/lua/',
				'../sharelib/src',
				'../../../third/include/cjson/',
				'../../../third/include/ghttp/',
		],
	CCFLAGS1=[
				#'-D_DEBUG',
				'-DNOMINMAX',
				'-DOS_BIT=64',
				'-DUSE_FAST_FORMAT',
				'-DUSE_RTTI',
				'-DCURL_STATICLIB',
				'-g3',
				'-Wall',
				'-fstack-protector-all',
				'-std=c++0x',
				'-Wno-invalid-offsetof',
				'-Wno-unused',
				'-fpermissive',
		]
	
	env=Environment()
	serverName = ''
        release = ARGUMENTS.get('release', 0)
        if int(release) == 1 :
		CCFLAGS1.append('-O2')
		CCFLAGS1.append('-DNDEBUG');
                serverName = 'x64/gamebaselib_release_64'
                print 'building '+serverName+' release project!'
        else:
		CCFLAGS1.append('-D_DEBUG')
                serverName = 'x64/gamebaselib_debug_64'
                print 'building '+serverName+' debug project!'
	
	#print CCFLAGS1

        #建立编译目标
        gamebaselib = env.Library(serverName,
                Glob('src/*.cpp'),
                CPPPATH=CPPPATH1,
                CCFLAGS=CCFLAGS1
        )

	libTarget="../../lib/internal/lib/";
	env.Install(libTarget,gamebaselib);
	env.Alias("install", libTarget);

else :
	print "Can't get platform system!", platform.system()
