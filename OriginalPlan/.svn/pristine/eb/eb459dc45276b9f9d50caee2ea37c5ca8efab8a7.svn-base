[corelib]
name = core
cxxcoredir = %(servercodedir)s/trunk/server/core/core/src/

prefix = corelib
outdir = %(cxxcoredir)s/script/autobind/
classes = GxService
enums = 
android_headers = -I%(androidndkdir)s/platforms/android-19/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/include
android_flags = -D_SIZE_T_DEFINED_ -DSSIZE_T=size_t

clang_headers = -I%(clangllvmdir)s/lib/clang/3.3/include
clang_flags = -nostdinc -x c++ -std=c++11 -w

core_flags = -D_DEBUG -DNOMINMAX -DOS_BIT=64 -DUSE_FAST_FORMAT -DUSE_RTTI -DCURL_STATICLIB -g3 -Wall -fstack-protector-all -Wno-invalid-offsetof -Wno-unused -U__WIN32__ -U_WIN32

cxxthirddir = %(servercodedir)s/third/include/
cxxthirdpath = -I%(cxxthirddir)s/ -I%(cxxthirddir)s/zlib -I%(cxxthirddir)s/cryptocpp -I%(cxxthirddir)s/tinyxpath -I%(cxxthirddir)s/libevent -I%(cxxthirddir)s/libevent/event2 -I%(cxxthirddir)s/coredumper -I%(cxxthirddir)s/mysql/linux -I%(cxxthirddir)s/mysqlpp  -I%(cxxthirddir)s/lua -I%(cxxthirddir)s/google
cxxinclude = %(cxxthirdpath)s -I%(cxxcoredir)s -I%(cxxcoredir)s/time/

extra_arguments = %(android_headers)s %(clang_headers)s %(android_flags)s %(clang_flags)s %(extra_flags)s %(core_flags)s %(cxxinclude)s

headers =
srcdir = %(cxxcoredir)s/
gensrcdir = %(cxxcoredir)s/
api_dir = %(servercodedir)s/tools/ZeroBraneStudio/api/lua/
skipfiles = rtti script/ time/Stopwatch.h __header.h

target_namespace =
remove_prefix =
skip = CMemInStream::[init],
       CMemOutStream::[init],
       CNetModule::[getAllNetLoopWrap],
       ISocketPacketHandler::[parsePack],
       CSocket::[send getReadEventArg getReadEvent getHostIP receive getWriteEventArg getWriteEvent getRemoteHostIP setAddr setRemoteAddr],
       _SStaticAssert<true>::[*],
       _AryTypeClean<false>::[*],
       _FixTypeClean<false>::[*],
       _.*::[*],
       CAccessor::[*],
       TFS.*::[*],
       stPool::[*],
       CDatabaseConn::[getConn],
       CDbInnerTypeTraits.*::[*],
       CDbTypeTraits.*::[*],
       CStringParse.*::[*],
       CSqlQueryBase.*::[*],
       CSimpleSqlQuery::[*],
       MultiInt.*::[*],
       Helper::[*],
       CTimespan::[assign swap],
       CDateTime::[swap assign],
       CPThread::[*],
       CFile::[*],
       PoolNode::[*],
       CSocketConnector::[getHandler],
       CSharedMemory::[*],
       CPProcess::[*],
       CSocketBroadCast::[broadMsg setNetLoopWraps],
       CSocketListener::[getListenEvent getListenEventArg onAccept],
       CSString::[*],
       CUString::[*],
       CTimerBase::[setInterval getInterval],
       CPair::[*],
       CPath::[*],
       CNetBroadcastModule::[broadMsg],
       CNetBroadcastWrap::[broadMsg],
       CDefaultSocket.*::[*],
       CSocketEventLoop::[setNewSocketQueue],
       CNetLoopWrap::[broadMsg],
       CIniFile::[*],
       CWinProcess::[*],
       CWinThread::[*],
       IProcess::[*],
       IThread::[*],
       IModuleConfig::[getRunCPUFlag],
       CBlock::[*],
       CSyncActiveQueueWrap::[push get],
       CSyncActiveQueue::[readMsg writeMsg],
       CBitSet::[*],
       IDisplayer::[display],
       CGxContext::[setRunCPU],
       CTimeManager::[LocalTime],
       CLogger::[ReleaseProcessName]

base_objects =
abstract_classes =
classes_have_type_info = no
rename =
rename_functions =
rename_classes =

# classes for which there will be no "parent" lookup
classes_have_no_parents =

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip =

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes